# syntax=docker/dockerfile:1

# Dockerfile for GLPI
# Compile : docker build -t glpi .
# Build multiplateform : docker buildx build --push --platform linux/386,linux/amd64,linux/arm/v6,linux/arm64,linux/arm --tag glpi .

#ENV TZ TimeZone, please select a format PHP understands, a list can be generated by running ls /usr/share/zoneinfo.

FROM alpine:latest

ENV NODE_ENV=production

# Variables for versions
ENV GLPI_VERSION="9.5.6"
ENV CAS_VERSION="1.4.0"


RUN apk --no-cache upgrade \
    && apk add --no-cache mariadb-client \
                          apache2 php7 php7-apache2 \
						  php7-curl php7-fileinfo php7-gd php7-json php7-mbstring php7-mysqli php7-session php7-zlib \
						  php7-simplexml php7-xml php7-intl php7-dom php7-xmlrpc php7-soap \
						  php7-ldap php7-pecl-apcu php7-ctype php7-sodium php7-snmp \
						  php7-exif php7-phar php7-zip php7-bz2 php7-opcache php7-pear php7-iconv php7-pdo \
						  nmap perl perl-net-snmp perl-crypt-des perl-digest-hmac wget inotify-tools

# Working directory to root
WORKDIR /root

# Install phpCAS
RUN wget https://github.com/apereo/phpCAS/releases/download/${CAS_VERSION}/CAS-${CAS_VERSION}.tgz \
    && pear install CAS-${CAS_VERSION}.tgz \
    && rm CAS-${CAS_VERSION}.tgz

# Configure Apache2
COPY httpd.conf /etc/apache2

# Install GLPI
RUN wget https://github.com/glpi-project/glpi/releases/download/${GLPI_VERSION}/glpi-${GLPI_VERSION}.tgz \
    && tar xzf glpi-${GLPI_VERSION}.tgz \
	&& mv glpi /var/www/ \
	&& rm glpi-${GLPI_VERSION}.tgz
COPY start_glpi.sh .
RUN chmod a+x start_glpi.sh

# Open port for httpd access
EXPOSE 80

# Mount volumes persistence
VOLUME /var/www/glpi/config
VOLUME /var/www/glpi/files
VOLUME /var/www/glpi/plugins
VOLUME /var/www/glpi/marketplace

# Run Apache2
ENTRYPOINT ["/root/start_glpi.sh"]